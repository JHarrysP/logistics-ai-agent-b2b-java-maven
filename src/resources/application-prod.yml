# Production Environment Configuration
spring:
  # Production Database (PostgreSQL)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/logistics_prod}
    username: ${DATABASE_USERNAME:logistics_user}
    password: ${DATABASE_PASSWORD:secure_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # JPA Production Settings
  jpa:
    hibernate:
      ddl-auto: validate # Never auto-create in production
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        generate_statistics: false
        jdbc:
          batch_size: 20
          fetch_size: 50
  
  # H2 Console disabled in production
  h2:
    console:
      enabled: false

# Production Logging
logging:
  level:
    com.logistics: INFO
    org.springframework: WARN
    org.hibernate: WARN
    org.apache.http: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/logistics-ai-agent/application.log
    max-size: 50MB
    max-history: 90
    total-size-cap: 1GB

# Production Server Configuration
server:
  port: ${PORT:8080}
  compression:
    enabled: true
  http2:
    enabled: true
  forward-headers-strategy: native
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# Production OpenAPI Configuration
springdoc:
  swagger-ui:
    enabled: false # Disable Swagger UI in production
  api-docs:
    enabled: false # Disable API docs in production

# Production Security Headers
security:
  headers:
    frame-options: DENY
    content-type-options: nosniff
    xss-protection: "1; mode=block"
    referrer-policy: strict-origin-when-cross-origin

# Production-specific Application Configuration
app:
  logistics:
    ai-agent:
      processing-timeout: 600 # Longer timeout for production
      max-retry-attempts: 5
      notification-enabled: true
    warehouse:
      mock-data-enabled: false
      debug-instructions: false
      performance-monitoring: true
    shipping:
      mock-delivery-enabled: false
      accelerated-processing: false
      real-time-tracking: true
    notifications:
      console-output: false
      mock-external-services: false
      email-enabled: true
      sms-enabled: true
      webhook-enabled: true
      slack-enabled: true

# Production CORS Configuration (Restricted)
cors:
  allowed-origins: 
    - "https://logistics.company.com"
    - "https://api.logistics.company.com"
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "Origin,Content-Type,Accept,Authorization,Cache-Control"
  allow-credentials: true
  max-age: 3600

# Production Actuator - Limited exposure
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: never
      show-components: never
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    mail:
      enabled: false

# Production Environment Variables Documentation
# Set these environment variables in production:
# - DATABASE_URL: PostgreSQL connection string
# - DATABASE_USERNAME: Database username
# - DATABASE_PASSWORD: Database password
# - EXTERNAL_API_KEY: API key for external services
# - NOTIFICATION_EMAIL_API_KEY: Email service API key
# - NOTIFICATION_SMS_API_KEY: SMS service API key
# - JWT_SECRET: Secret for JWT token signing
# - ENCRYPTION_KEY: Key for data encryption
# - MONITORING_API_KEY: Monitoring service API key