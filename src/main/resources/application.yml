# Main Spring Boot Configuration for Logistics AI Agent
server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

spring:
  application:
    name: logistics-ai-agent

  # Profile-specific configuration
  profiles:
    active: dev

  # Database Configuration
  spring:
    datasource:
      url: jdbc:h2:mem:logistics;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      driver-class-name: org.h2.Driver
      username: sa
      password: ""
      generate-unique-name: false  # This is the key line!
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA Configuration
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: true
        generate_statistics: false
    open-in-view: false
    # This ensures SQL runs AFTER Hibernate creates tables
    defer-datasource-initialization: true

  # H2 Console (Development only)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false

  # SQL Initialization - MOVED UNDER SPRING SECTION
  sql:
    init:
      mode: always
      continue-on-error: false

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Europe/Berlin
    date-format: yyyy-MM-dd HH:mm:ss

  # Async Configuration
  task:
    execution:
      pool:
        core-size: 5
        max-size: 15
        queue-capacity: 200
        keep-alive: 60s
      thread-name-prefix: logistics-async-
    scheduling:
      pool:
        size: 10
      thread-name-prefix: logistics-scheduler-

# Management Configuration (Actuator)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
  health:
    diskspace:
      enabled: true
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    display-operation-id: true
    default-models-expand-depth: 1
    default-model-expand-depth: 1
  show-actuator: true

# Logging Configuration
logging:
  level:
    com.logistics: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/logistics-ai-agent.log
    max-size: 10MB
    max-history: 30

# Application-specific Configuration
app:
  logistics:
    ai-agent:
      processing-timeout: 300
      max-retry-attempts: 3
      notification-enabled: true
    warehouse:
      max-items-per-order: 50
      safety-stock-factor: 1.2
      picking-time-base: 3
    shipping:
      business-hours:
        start: 8
        end: 18
      max-weight-per-truck: 5000
      delivery-zones:
        local: 4
        regional: 8
        national: 12
    notifications:
      client-enabled: true
      internal-enabled: true
      urgent-alert-enabled: true